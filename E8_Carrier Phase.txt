Fs = 10000;
Ts = 1 / Fs;
symbolRate = 1000;
L = 4;
rollOff = 0.5;
rcDelay = 10;
numPaths = 4;
pathDelays = [0 1 3 6] * Ts;
pathGains = (1/sqrt(2)) * (randn(numPaths, 1) + 1j * randn(numPaths, 1));

disp('Signal Properties:');
disp(['Sampling Frequency (Fs): ', num2str(Fs), ' Hz']);
disp(['Symbol Rate: ', num2str(symbolRate), ' symbols/sec']);
disp(['Oversampling Factor (L): ', num2str(L)]);
disp(' ');

disp('Channel Properties:');
disp(['Number of Paths: ', num2str(numPaths)]);
disp('Path Delays (in samples):');
disp(round(pathDelays * Fs));
disp('Path Gains (complex):');
disp(pathGains);

numBits = 1000;
data = randi([0 1], numBits, 1);
txSymbols = 2*data - 1;
htx = rcosdesign(rollOff, 6, L);
txUpSequence = upsample(txSymbols, L);
txSignal = filter(htx, 1, txUpSequence);

rayleighChannel = comm.RayleighChannel( ...
    'SampleRate', Fs, ...
    'PathDelays', pathDelays, ...
    'AveragePathGains', [10*log10(abs(pathGains).^2)]', ...
    'MaximumDopplerShift', 0, ...
    'NormalizePathGains', true, ...
    'PathGainsOutputPort', true);

rxSignalFading = rayleighChannel(txSignal);

figure;
subplot(3,1,1);
plot(real(txSignal(1:100)), 'g');
title('Transmitted Signal (Real Part)');
xlabel('Sample Index');
ylabel('Amplitude');
grid on;

subplot(3,1,2);
plot(real(rxSignalFading(1:100)), 'b');
title('Received Signal (Real Part) after Frequency-Selective Fading');
xlabel('Sample Index');
ylabel('Amplitude');
grid on;

SNR = 10;
rxSignalNoisy = awgn(rxSignalFading, SNR, 'measured');

subplot(3,1,3);
plot(real(rxSignalNoisy(1:100)), 'r');
title('Received Noisy Signal (Real Part)');
xlabel('Sample Index');
ylabel('Amplitude');
grid on;

figure;
subplot(2,1,1);
scatter(real(txSignal(1:100)), imag(txSignal(1:100)), 'g');
title('Transmitted Signal Constellation');
xlabel('In-phase');
ylabel('Quadrature');
grid on;

subplot(2,1,2);
scatter(real(rxSignalFading(1:100)), imag(rxSignalFading(1:100)), 'b');
title('Received Signal Constellation after Frequency-Selective Fading');
xlabel('In-phase');
ylabel('Quadrature');
grid on;

figure;
scatter(real(rxSignalNoisy(1:100)), imag(rxSignalNoisy(1:100)), 'r');
title('Received Noisy Signal Constellation');
xlabel('In-phase');
ylabel('Quadrature');
grid on;
